// <auto-generated />
using System;
using ClubService.Infrastructure.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ClubService.Infrastructure.Migrations.EventStore
{
    [DbContext(typeof(EventStoreDbContext))]
    [Migration("20240709210357_InitialEventStore")]
    partial class InitialEventStore
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ClubService.Domain.Event.DomainEnvelope<ClubService.Domain.Event.IDomainEvent>", b =>
                {
                    b.Property<Guid>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("eventId");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uuid")
                        .HasColumnName("entityId");

                    b.Property<string>("EntityType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("entityType");

                    b.Property<string>("EventData")
                        .HasColumnType("text")
                        .HasColumnName("eventData");

                    b.Property<string>("EventType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("eventType");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("timestamp");

                    b.HasKey("EventId")
                        .HasName("pK_DomainEvent");

                    b.ToTable("DomainEvent", (string)null);

                    b.HasData(
                        new
                        {
                            EventId = new Guid("ba4eeaa4-9707-4da0-8ee2-3684b4f7804f"),
                            EntityId = new Guid("1588ec27-c932-4dee-a341-d18c8108a711"),
                            EntityType = "SYSTEM_OPERATOR",
                            EventData = "{\"SystemOperatorId\":{\"Id\":\"1588ec27-c932-4dee-a341-d18c8108a711\"},\"Username\":\"systemoperator\"}",
                            EventType = "SYSTEM_OPERATOR_REGISTERED",
                            Timestamp = new DateTime(2024, 7, 9, 21, 3, 56, 835, DateTimeKind.Utc).AddTicks(7907)
                        },
                        new
                        {
                            EventId = new Guid("36db98d7-8fea-4715-923c-74192b147752"),
                            EntityId = new Guid("4c148d45-ebc8-4bbf-aa9a-d491eb185ad5"),
                            EntityType = "SUBSCRIPTION_TIER",
                            EventData = "{\"Id\":{\"Id\":\"4c148d45-ebc8-4bbf-aa9a-d491eb185ad5\"},\"Name\":\"Guinea Pig Subscription Tier\",\"MaxMemberCount\":100}",
                            EventType = "SUBSCRIPTION_TIER_CREATED",
                            Timestamp = new DateTime(2024, 7, 9, 21, 3, 56, 835, DateTimeKind.Utc).AddTicks(7913)
                        },
                        new
                        {
                            EventId = new Guid("3b591696-d9c9-4e30-a6a1-6a1439c5580b"),
                            EntityId = new Guid("2bebd11c-bf8e-4448-886f-0cb8608af7ca"),
                            EntityType = "SUBSCRIPTION_TIER",
                            EventData = "{\"Id\":{\"Id\":\"2bebd11c-bf8e-4448-886f-0cb8608af7ca\"},\"Name\":\"Woolf Subscription Tier\",\"MaxMemberCount\":150}",
                            EventType = "SUBSCRIPTION_TIER_CREATED",
                            Timestamp = new DateTime(2024, 7, 9, 21, 3, 56, 835, DateTimeKind.Utc).AddTicks(7916)
                        },
                        new
                        {
                            EventId = new Guid("8d4d3eff-b77b-4e21-963b-e211366bb94b"),
                            EntityId = new Guid("38888969-d579-46ec-9cd6-0208569a077e"),
                            EntityType = "SUBSCRIPTION_TIER",
                            EventData = "{\"Id\":{\"Id\":\"38888969-d579-46ec-9cd6-0208569a077e\"},\"Name\":\"Gorilla Subscription Tier\",\"MaxMemberCount\":200}",
                            EventType = "SUBSCRIPTION_TIER_CREATED",
                            Timestamp = new DateTime(2024, 7, 9, 21, 3, 56, 835, DateTimeKind.Utc).AddTicks(7918)
                        },
                        new
                        {
                            EventId = new Guid("e335d85a-f844-4c7e-b608-035ef00af733"),
                            EntityId = new Guid("d19073ba-f760-4a9a-abfa-f8215d96bec7"),
                            EntityType = "SUBSCRIPTION_TIER",
                            EventData = "{\"Id\":{\"Id\":\"d19073ba-f760-4a9a-abfa-f8215d96bec7\"},\"Name\":\"Bison Subscription Tier\",\"MaxMemberCount\":250}",
                            EventType = "SUBSCRIPTION_TIER_CREATED",
                            Timestamp = new DateTime(2024, 7, 9, 21, 3, 56, 835, DateTimeKind.Utc).AddTicks(7921)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
